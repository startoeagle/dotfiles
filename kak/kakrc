evaluate-commands %sh{
        plugins="$kak_config/plugins"
        mkdir -p "$plugins"
        [ ! -e "$plugins/plug.kak" ] && \
            git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
            printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload
plug "kak-lsp/kak-lsp" do %{
        cargo install --locked --force --path .
}

plug "andreyorst/fzf.kak"

set global tabstop 4
set global indentwidth 4

add-highlighter global/ show-whitespaces 
add-highlighter global/ number-lines -relative
set-option global ui_options ncurses_assistant=dilbert

map global normal <c-p> ': fzf-mode<ret>'

hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
        lsp-enable-window
}

hook global WinSetOption filetype=rust %{
	hook window -group rust-inlay-hints BufReload .* rust-analyzer-inlay-hints
	hook window -group rust-inlay-hints NormalIdle .* rust-analyzer-inlay-hints
	hook window -group rust-inlay-hints InsertIdle .* rust-analyzer-inlay-hints
	hook -once -always window WinSetOption filetype=.* %{
		remove-hooks window rust-inlay-hints
	}
}
hook global WinSetOption filetype=<language> %{
	hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
	hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
	hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
	hook -once -always window WinSetOption filetype=.* %{
		remove-hooks window semantic-tokens
	}
}

map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

map global user c %{: edit ~/.config/kak/kakrc <ret>} -docstring "Goto kakrc"
map global user f %{: fzf-mode<ret>} -docstring "Enter fzf commands"
map global user v %{: tmux-terminal-horizontal kak -c %val{session} <ret>} -docstring "New split to the right"

colorscheme lucius


hook global InsertChar k %{ try %{
      exec -draft hH <a-k>jk<ret> d
        exec <esc>
}}
