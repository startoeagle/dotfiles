evaluate-commands %sh{
        plugins="$kak_config/plugins"
        mkdir -p "$plugins"
        [ ! -e "$plugins/plug.kak" ] && \
            git clone -q https://github.com/andreyorst/plug.kak.git "$plugins/plug.kak"
            printf "%s\n" "source '$plugins/plug.kak/rc/plug.kak'"
}
plug "andreyorst/plug.kak" noload
plug "kak-lsp/kak-lsp" do %{
        cargo install --locked --force --path .
}

plug "andreyorst/fzf.kak"
plug "andreyorst/powerline.kak" defer powerline_gruvbox %{
        powerline-theme default
} config %{
        powerline-start
}

set global tabstop 4
set global indentwidth 4
plug "andreyorst/smarttab.kak" defer smarttab %{
        # when `backspace' is pressed, 4 spaces are deleted at once
     set-option global softtabstop 4
     } config %{
            # these languages will use `expandtab' behavior, uses spaces for everything
            hook global WinSetOption filetype=(rust|markdown|kak|lisp|scheme|sh|perl|python) expandtab
            # these languages will use `noexpandtab' behavior
            hook global WinSetOption filetype=(makefile|gas) noexpandtab
            # these languages will use `smarttab' behavior
            hook global WinSetOption filetype=(c|cpp) smarttab
}


# add-highlighter global/ show-whitespaces 
add-highlighter global/ number-lines -relative

hook global WinSetOption filetype=(rust|python|go|javascript|typescript|c|cpp) %{
        lsp-enable-window
}

hook global WinSetOption filetype=rust %{
    hook window -group rust-inlay-hints BufReload .* rust-analyzer-inlay-hints
    hook window -group rust-inlay-hints NormalIdle .* rust-analyzer-inlay-hints
    hook window -group rust-inlay-hints InsertIdle .* rust-analyzer-inlay-hints
    hook -once -always window WinSetOption filetype=.* %{
        remove-hooks window rust-inlay-hints
    }
}
hook global WinSetOption filetype=<language> %{
    hook window -group semantic-tokens BufReload .* lsp-semantic-tokens
    hook window -group semantic-tokens NormalIdle .* lsp-semantic-tokens
    hook window -group semantic-tokens InsertIdle .* lsp-semantic-tokens
    hook -once -always window WinSetOption filetype=.* %{
        remove-hooks window semantic-tokens
    }
}

map global user l %{: enter-user-mode lsp<ret>} -docstring "LSP mode"

map global user c %{: edit ~/.config/kak/kakrc <ret>} -docstring "Goto kakrc"
map global user f %{: fzf-mode<ret>} -docstring "Enter fzf commands"
map global user v %{: tmux-terminal-horizontal kak -c %val{session} <ret>} -docstring "New split to the right"

colorscheme dracula

hook global InsertChar k %{ try %{
      exec -draft hH <a-k>jk<ret> d
        exec <esc>
}}
hook global WinSetOption filetype=python expandtab
hook global WinSetOption filetype=python smarttab

# evaluate-commands %sh{
#     for filetype in c cpp rust java; do
#         printf "%s\n" "add-highlighter shared/$filetype/code/functions    regex (\w*?)\b(for|if|while)?(\h+)?(?=\() 1:function
#                        add-highlighter shared/$filetype/code/struct_field regex ((?<!\.\.)(?<=\.)|(?<=->))[a-zA-Z](\w+)?\b(?![>\"\(]) 0:rgb:fb4934,default+b
#                        add-highlighter shared/$filetype/code/method       regex ((?<!\.\.)(?<=\.)|(?<=->))[a-zA-Z](\w+)?(\h+)?(?=\() 0:function
#                        add-highlighter shared/$filetype/code/return       regex \breturn\b 0:rgb:fb4934,default+b"
#     done
#     for filetype in c cpp; do
#         printf "%s\n" "add-highlighter shared/$filetype/code/types_1 regex \b(v|u|vu)\w+(8|16|32|64)(_t)?\b 0:type
#                        add-highlighter shared/$filetype/code/types_2 regex \b(v|u|vu)?(_|__)?(s|u)(8|16|32|64)(_t)?\b 0:type
#                        add-highlighter shared/$filetype/code/types_3 regex \b(v|u|vu)(_|__)?(int|short|char|long)(_t)?\b 0:type
#                        add-highlighter shared/$filetype/code/types_4 regex \b\w+_t\b 0:type"
#     done
#     for filetype in cpp rust; do
#         printf "%s\n" "add-highlighter shared/$filetype/code/  regex [a-zA-Z](\w+)?(\h+)?(?=::) 0:rgb:be8019,default"
#     done
# }
